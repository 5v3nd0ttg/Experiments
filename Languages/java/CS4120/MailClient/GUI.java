/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment2;

import org.apache.commons.codec.binary.Base64;
import java.awt.FileDialog;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.naming.ldap.InitialLdapContext;
import javax.naming.ldap.LdapContext;
import javax.naming.ldap.StartTlsRequest;
import javax.naming.ldap.StartTlsResponse;
import javax.net.ssl.SSLSession;
import javax.swing.JOptionPane;

/**
 *
 * @author NBI08430
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bccText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mailContent = new javax.swing.JTextArea();
        attachFileBtn = new javax.swing.JButton();
        sendMessageBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fromText = new javax.swing.JTextField();
        subjectText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        hostCombo = new javax.swing.JComboBox();
        passwordText = new javax.swing.JPasswordField();
        ccText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        attachedText = new javax.swing.JTextField();
        toText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        jMenu4.setText("jMenu4");

        jMenuItem7.setText("jMenuItem7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("FROM:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("CC:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("BCC:");

        mailContent.setColumns(20);
        mailContent.setRows(5);
        mailContent.setText("1 2 3");
        jScrollPane1.setViewportView(mailContent);

        attachFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment2/paperclip_black_attachment.png"))); // NOI18N
        attachFileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AttachFileBtnMouseDown(evt);
            }
        });
        attachFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachFileBtnActionPerformed(evt);
            }
        });

        sendMessageBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment2/SendMailVector.png"))); // NOI18N
        sendMessageBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SendBtnMouseDown(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Subject:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("TO:");

        fromText.setText("nbinman@gmail.com");

        subjectText.setText("test");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("HOST:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("PASSWORD:");

        hostCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gmail TLS", "Gmail SSL", "Yahoo", "UCMO Utility" }));

        passwordText.setText("L$di4f4e");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Attached:");

        attachedText.setEnabled(false);

        toText.setText("nbinman@gmail.com");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Content:");

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachmentClear(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Attach File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttachFileMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Send");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Cancel / Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenu3.setText("Clear");

        jMenuItem3.setText("Destinations");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDestinationsMenuBtnActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem6.setText("Attachments");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearAttachmentsMenuBtnActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem5.setText("Entire Form");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearEntireFormMenuBtnActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenu2.add(jMenu3);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("About");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AboutMenuBtnMouseDown(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bccText)
                            .addComponent(subjectText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(toText)
                            .addComponent(ccText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(attachedText, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(attachFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendMessageBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fromText, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hostCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(hostCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(attachFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendMessageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(toText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ccText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bccText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subjectText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(attachedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.getAccessibleContext().setAccessibleName("HOST:");

        setSize(new java.awt.Dimension(661, 488));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private String[] attachments = new String[25];
    private String[] attachmentNames = new String[25];
    private int attachmentCurrent = 0;
    private void SendSocketCommand(String command,String expectedReturn,String response,BufferedReader br,OutputStream os,Socket socket) throws IOException{
        String line;
        System.out.print(command);
        os.write(command.getBytes("US-ASCII"));
        response=br.readLine();
        System.out.println(response);
        while(br.ready()){
            line=br.readLine();
            System.out.println(line);
        } //end while
        if(!response.startsWith(expectedReturn)){
            socket.close();
        }
    }
    private void SendMailWithTCP() throws Exception{
        try {
            Socket socket = new Socket("" + "smtp.gmail.com", 587); //Establish TCP connection
            InputStream is = socket.getInputStream();
            OutputStream os=socket.getOutputStream();
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader br = new BufferedReader(isr);
            String response = br.readLine();
            System.out.println(response);
            if(!response.startsWith("220")){
                socket.close();
            }
            
            SendSocketCommand("EHLO theoestudio.com\r\n","250",response,br,os,socket);
            SendSocketCommand("STARTTLS\r\n","250",response,br,os,socket);
            LdapContext ctx = new InitialLdapContext();
            StartTlsResponse tls = (StartTlsResponse) ctx.extendedOperation(new StartTlsRequest());
            SSLSession session=tls.negotiate();
            SendSocketCommand("EHLO theoestudio.com\r\n","250",response,br,os,socket);
            SendSocketCommand("AUTH LOGIN PLAIN "+passwordText.getText()+"\r\n","250",response,br,os,socket);
            SendSocketCommand("MAIL FROM: Nate<nbinman@gmail.com>\r\n","250",response,br,os,socket);
            SendSocketCommand("RCPT TO: Nate<nbinman@gmail.com>\r\n","250",response,br,os,socket);
            SendSocketCommand("DATA\r\n","250",response,br,os,socket);
            SendSocketCommand("SUBJECT: Testing stuff is fun\r\n\r\nHello testing.\r\n.\r\n","250",response,br,os,socket);
            SendSocketCommand("QUIT\r\n","250",response,br,os,socket);
            tls.close();
            ctx.close();
            socket.close();
        } catch (UnknownHostException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }  

    private void SendEmail(){
        Properties properties = System.getProperties(); //get system properties
        if("Gmail TLS".equals(hostCombo.getSelectedItem().toString())){
            properties.setProperty("mail.smtp.auth","true");
            properties.setProperty("mail.smtp.host","smtp.gmail.com");
            properties.setProperty("mail.smtp.port","587");
            properties.setProperty("mail.smtp.starttls.enable","true");
        }else if("Gmail SSL".equals(hostCombo.getSelectedItem().toString())){
            properties.setProperty("mail.smtp.auth","true");
            properties.setProperty("mail.smtp.host","smtp.gmail.com");
            properties.setProperty("mail.smtp.port","465");
            properties.setProperty("mail.smtp.socketFactory.port","465");
            properties.setProperty("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");
        }else if("Yahoo SSL".equals(hostCombo.getSelectedItem().toString())){
            properties.setProperty("mail.smtp.auth","true");
            properties.setProperty("mail.smtp.host","smtp.mail.yahoo.com");
            properties.setProperty("mail.smtp.port","465");
            properties.setProperty("mail.smtp.socketFactory.port","465");
            properties.setProperty("mail.smtp.socketFactory.class","javax.net.ssl.SSLSocketFactory");
        }
        Session session = Session.getInstance(properties,
                new javax.mail.Authenticator(){
                    @Override
                    protected PasswordAuthentication getPasswordAuthentication(){
                        return new PasswordAuthentication(fromText.getText(),passwordText.getText());
                    }
                });
        
        try{
           MimeMessage message = new MimeMessage(session); //Create as it's default object
           message.setFrom(new InternetAddress(fromText.getText())); //set the from header
           message.addRecipient(Message.RecipientType.TO,new InternetAddress(toText.getText())); 
           if(bccText.getText().length()>0)message.addRecipient(Message.RecipientType.CC,new InternetAddress(bccText.getText()));
           if(bccText.getText().length()>0)message.addRecipient(Message.RecipientType.BCC,new InternetAddress(bccText.getText()));
           Multipart multipart = new MimeMultipart("mixed");
           MimeBodyPart messageBodyPart = new MimeBodyPart(); //the message
           messageBodyPart.setText(mailContent.getText()); //the message
           multipart.addBodyPart(messageBodyPart); //the message
           if(attachedText.getText().length()>0){ //make sure there is actually attachments
                for(int i = attachmentCurrent-1; i>=0;--i){
                     MimeBodyPart attachmentBodyPart = new MimeBodyPart();
                     DataSource source = new FileDataSource(attachments[i]);
                     attachmentBodyPart.setDataHandler(new DataHandler(source));
                     attachmentBodyPart.setFileName(attachmentNames[i]);
                     multipart.addBodyPart(attachmentBodyPart);
                }          
           } //end if
           message.setSubject(subjectText.getText());
           message.setContent(multipart);
           Transport.send(message);
           JOptionPane.showMessageDialog(null, "Message sent successfully!", "Assignment 2 : Mail Application", JOptionPane.INFORMATION_MESSAGE);
        }catch (MessagingException mex){
           JOptionPane.showMessageDialog(null, mex.toString(), "Error!", JOptionPane.ERROR_MESSAGE); mex.printStackTrace();
        }
        
    }
    private void AboutMenuBtnMouseDown(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AboutMenuBtnMouseDown
        JOptionPane.showMessageDialog(null, "This mail application was developed by Nathaniel Inman for CS4120 Fall 2013.", "Assignment 2 : Mail Application", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_AboutMenuBtnMouseDown

    private void AttachFileBtnMouseDown(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AttachFileBtnMouseDown
        // TODO add your handling code here:
    }//GEN-LAST:event_AttachFileBtnMouseDown

    private void SendBtnMouseDown(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendBtnMouseDown
        SendEmail();
    }//GEN-LAST:event_SendBtnMouseDown

    private void ExitMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuBtnActionPerformed
         this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_ExitMenuBtnActionPerformed

    private void SendMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendMenuBtnActionPerformed
        SendEmail();
    }//GEN-LAST:event_SendMenuBtnActionPerformed

    private void AttachFileMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachFileMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AttachFileMenuBtnActionPerformed

    private void ClearEntireFormMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearEntireFormMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearEntireFormMenuBtnActionPerformed

    private void ClearAttachmentsMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearAttachmentsMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearAttachmentsMenuBtnActionPerformed

    private void ClearDestinationsMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearDestinationsMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearDestinationsMenuBtnActionPerformed

    private void attachFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachFileBtnActionPerformed
        FileDialog fd = new FileDialog(new javax.swing.JFrame(), "Choose a file", FileDialog.LOAD);
        fd.setDirectory("C:\\");
        fd.setVisible(true);
        String filename = fd.getFile();
        if (filename != null){
            if(attachmentCurrent>0){
                attachedText.setText(attachedText.getText()+";"+filename);   
                attachments[attachmentCurrent]=fd.getDirectory()+filename;
                attachmentNames[attachmentCurrent]=filename;
                attachmentCurrent++;
            }else{
                attachedText.setText(filename);
                attachments[attachmentCurrent]=fd.getDirectory()+filename;
                attachmentNames[attachmentCurrent]=filename;
                attachmentCurrent++;
            } //end if
        } //end if
    }//GEN-LAST:event_attachFileBtnActionPerformed

    private void attachmentClear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachmentClear
        attachmentCurrent=0;
        attachedText.setText("");
    }//GEN-LAST:event_attachmentClear

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attachFileBtn;
    private javax.swing.JTextField attachedText;
    private javax.swing.JTextField bccText;
    private javax.swing.JTextField ccText;
    private javax.swing.JTextField fromText;
    private javax.swing.JComboBox hostCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mailContent;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JButton sendMessageBtn;
    private javax.swing.JTextField subjectText;
    private javax.swing.JTextField toText;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("TOESLogo.png")));
    }
}
